swagger: "2.0"
info:
  description: |
    Official & Core API for ADT

    [ADT](http://adtcore.io)  Main API

  version: "1.0.0"
  title: ADT API
  termsOfService: http://adtcore.io/terms/
  contact:
    name: team@adtcore.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: api.adtcore.io
# basePath: /v1
# schemes:
#   - http
paths:
  /patients:
    get: 
      tags: 
        - patients
      summary: get's a list of patients
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: Number of patients to fetch
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: offset
          in: query
          description: non-negative offset integer for fetching patients
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Patients"
        "400":
          description: Invalid status value
      security:
        - adt_auth:
          - read_patient
    post:
      tags:
        - patients
      summary: Add a new patient to the facility
      description: ""
      operationId: addPatient
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object being added to facility
          required: false
          schema:
            $ref: "#/definitions/Patient"
      responses:
        "201":
          description: Patient Added Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Patient"
        "405":
          description: Invalid input
      security:
        - adt_auth:
          - create_patient
          - read_patient

  /patients/{patientId}:
    get:
      tags:
        - patients
      summary: Find patient by patientId
      description: Returns the patient with the specified patientId
      operationId: getPatientById
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: patientId
          description: ID of patient that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Patient not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Patient"
        "400":
          description: Invalid ID supplied
      security:
        - api_key: []
        - adt_auth:
          - create_patient
          - read_patient
    put:
      tags:
        - patients
      summary: Update an existing patient
      description: ""
      operationId: updatePatient
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Patient"
        - in: path
          name: patientId
          description: Patient id to delete
          required: true
          type: integer
          format: int64     
      responses:
        "202":
          description: Update Accepted
        "405":
          description: Validation exception
        "404":
          description: Patient not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient
    delete:
      tags:
        - patients
      summary: Deletes a patient
      description: ""
      operationId: deletePatient
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: patientId
          description: Patient id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid patient value
        "204":
          description: Patient deleted
      security:
        - adt_auth:
          - create_patient
          - read_patient
  /patients/{patientId}/prophylaxis/{prophylaxisId}:
    get:
      tags:
        - patients
      summary: Fetch the prophylaxis patient is administered
      description: Fetch prophylaxis
      operationId: patientProphylaxis
      produces:
        - application/json
      parameters: 
        - in: path
          name: patientId
          description: ID of patient that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: prophylaxisId
          description: ID of prophylaxis that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Patient not found
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Prophylaxis"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - patients
      summary: Update an existing patient prophylaxis
      description: ""
      operationId: updatePatientProphylaxis
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Patients"
        - in: path
          name: patientId
          description: Patient id to delete
          required: true
          type: integer
          format: int64
        - in: path
          name: prophylaxisId
          description: Patient id to delete
          required: true
          type: integer
          format: int64      
      responses:
        "405":
          description: Validation exception
        "404":
          description: Patient not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient 
    delete:
      tags:
        - patients
      summary: Remove a patient of a Prophylaxis
      description: ""
      operationId: deletePatientProphylaxis
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: patientId
          description: Patient id to delete
          required: true
          type: integer
          format: int64
        - in: path
          name: prophylaxisId
          description: Patient id to delete
          required: true
          type: integer
          format: int64           
      responses:
        "400":
          description: Invalid patient value
        "204":
          description: Prophylaxis has been removed
      security:
        - adt_auth:
          - create_patient
          - read_patient
  /patients/{patientId}/regimens/{regimenId}:
    get:
      tags:
        - patients
      summary: Fetch the regimens patient is administered
      description: Fetch regimens
      operationId: patientregimens
      produces:
        - application/json
      parameters: 
        - in: path
          name: patientId
          description: ID of patient that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: regimenId
          description: ID of regimen that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Patient not found
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PatientRegimen"
        "400":
          description: Invalid ID supplied
    post:
      tags:
        - patients
      summary: Add a new regimen to a patient
      description: ""
      operationId: addPatientRegimen
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Regimen object has been added to Patient object
          required: false
          schema:
            $ref: "#/definitions/PatientRegimen"
        - in: path
          name: patientId
          description: Patient id to delete
          required: true
          type: integer
          format: int64     
        - in: path
          name: regimenId
          description: Patient id to delete
          required: true
          type: integer
          format: int64 
          
      responses:
        "201":
          description: Patient regimen Added Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/PatientRegimen"
        "405":
          description: Invalid input
      security:
        - adt_auth:
          - create_patient
          - read_patient
    put:
      tags:
        - patients
      summary: Update an existing patient regimen
      description: ""
      operationId: updatePatientRegimens
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Patients"
        - in: path
          name: patientId
          description: Patient id to update
          required: true
          type: integer
          format: int64     
        - in: path
          name: regimenId
          description: Patient id to update
          required: true
          type: integer
          format: int64  
          
      responses:
        "405":
          description: Validation exception
        "404":
          description: Patient not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient   
    delete:
      tags:
        - patients
      summary: Remove a patient of a regimen
      description: ""
      operationId: deletePatientRegimens
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: patientId
          description: Patient id and Regimen id to delete
          required: true
          type: integer
          format: int64
        - in: path
          name: regimenId
          description: Patient id to delete
          required: true
          type: integer
          format: int64 
          
      responses:
        "400":
          description: Invalid parameters
        "204":
          description: regimens has been removed
      security:
        - adt_auth:
          - create_patient
          - read_patient
  /patients/{patientId}/appointments/{appointmentId}:
    get:
      tags:
        - patients
      summary: Fetch the patient's appointments
      description: Fetch appointments
      operationId: patientAppointments
      produces:
        - application/json
      parameters: 
        - in: path
          name: patientId
          description: ID's of patient and appointment that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: appointmentId
          description: ID of appointment that needs to be fetched
          required: true
          type: integer
          format: int64
          
      responses:
        "404":
          description: Patient or Appointment not found
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Appointments"
        "400":
          description: Invalid ID supplied
    post:
      tags:
        - patients
      summary: Add a new Appointments to a patient
      description: ""
      operationId: addPatientAppointments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Appointments object has been added to Patient object
          required: false
          schema:
            $ref: "#/definitions/Appointments"
        - in: path
          name: patientId
          description: ID of patient
          required: true
          type: integer
          format: int64
        - in: path
          name: appointmentId
          description: ID of appointment 
          required: true
          type: integer
          format: int64
      responses:
        "201":
          description: Patient appointments Added Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Appointments"
        "405":
          description: Invalid input
      security:
        - adt_auth:
          - create_patient
          - read_patient
    put:
      tags:
        - patients
      summary: Update an existing patient appointment
      description: ""
      operationId: updatePatientAppointments
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Patients"
        - in: path
          name: patientId
          description: ID of patient for update
          required: true
          type: integer
          format: int64
        - in: path
          name: appointmentId
          description: ID of appointment for update
          required: true
          type: integer
          format: int64
      responses:
        "405":
          description: Validation exception
        "404":
          description: Patient not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient    
    delete:
      tags:
        - patients
      summary: Remove a patient appointment
      description: ""
      operationId: deletePatientAppointment
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: patientId
          description: ID of patient and appointment that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: appointmentId
          description: ID of appointment that needs to be deleted
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid patient value
        "204":
          description: regimens has been removed
      security:
        - adt_auth:
          - create_patient
          - read_patient
  /patients/{patientId}/visits/{visitId}:
    get:
      tags:
        - patients
      summary: Fetch a patient's visit
      description: Fetch visits
      operationId: patientVisits
      produces:
        - application/json
      parameters: 
        - in: path
          name: patientId
          description: ID's of patient and Visits that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: visitId
          description: ID's of Visits that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Patient or Visits not found
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Visits"
        "400":
          description: Invalid ID supplied
    post:
      tags:
        - patients
      summary: Add a new Visits to a patient
      description: ""
      operationId: addPatientVisits
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Visits object has been added to Patient object
          required: false
          schema:
            $ref: "#/definitions/Visits"
        - in: path
          name: patientId
          description: ID's of patient
          required: true
          type: integer
          format: int64
        - in: path
          name: visitId
          description: ID's of Visits
          required: true
          type: integer
          format: int64
      responses:
        "201":
          description: Patient Visit Added Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Visits"
        "405":
          description: Invalid input
      security:
        - adt_auth:
          - create_patient
          - read_patient
    put:
      tags:
        - patients
      summary: Update an existing patient appointment
      description: ""
      operationId: updatePatientVisit
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Visits"
        - in: path
          name: patientId
          description: Patient id to update
          required: true
          type: integer
          format: int64
        - in: path
          name: visitId
          description: visit id to update
          required: true
          type: integer
          format: int64        
      responses:
        "405":
          description: Validation exception
        "404":
          description: Patient or Visits not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient    
    delete:
      tags:
        - patients
      summary: Remove a patient Visit
      description: ""
      operationId: deletePatientVisit
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: patientId
          description: ID's of patient and appointment that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: visitId
          description: ID of appointment that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid patient value
        "204":
          description: Visit has been removed
      security:
        - adt_auth:
          - create_patient
          - read_patient
  /patients/{patientId}/dependants/{dependantId}:
    get:
      tags:
        - patients
      summary: Fetch a patient's dependants
      description: Fetch dependants
      operationId: patientDependants
      produces:
        - application/json
      parameters: 
        - in: path
          name: patientId
          description: ID's of patient that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: dependantId
          description: ID of dependants that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Patient or dependants not found
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PatientDependants"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - patients
      summary: Update an existing patient dependants
      operationId: updatePatientDependant
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/PatientDependants"
        - in: path
          name: patientId
          description: Patient id to update
          required: true
          type: integer
          format: int64
        - in: path
          name: dependantId
          description: Dependants id to update
          required: true
          type: integer
          format: int64        
      responses:
        "202":
          description: Update Accepted
        "405":
          description: Validation exception
        "404":
          description: Patient or Dependants not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient
    delete:
      tags:
        - patients
      summary: Remove a patient Dependants
      description: ""
      operationId: deletePatientDependants
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: patientId
          description: Patient id to update
          required: true
          type: integer
          format: int64
        - in: path
          name: dependantId
          description: visit id to update
          required: true
          type: integer
          format: int64 
      responses:
        "400":
          description: Invalid patient value
        "204":
          description: Dependants has been removed
      security:
        - adt_auth:
          - create_patient
          - read_patient

  /patients/{patientId}/allergies/{allergieId}:
    get:
      tags:
        - patients
      summary: Fetch a patient's allergies
      description: Fetch allergies
      operationId: patientAllergies
      produces:
        - application/json
      parameters: 
        - in: path
          name: patientId
          description: ID's of patient that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: allergieId
          description: ID of Allergies that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Patient or Allergies not found
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PatientDrugAllergy"
        "400":
          description: Invalid ID supplied
    post:
      tags:
        - patients
      summary: Add a new PatientDrugAllergy to a patient
      description: ""
      operationId: addPatientAllergies
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Allergies object has been added to Patient object
          required: false
          schema:
            $ref: "#/definitions/PatientDrugAllergy"
        - in: path
          name: patientId
          description: ID's of patient
          required: true
          type: integer
          format: int64
        - in: path
          name: allergieId
          description: ID of Allergies
          required: true
          type: integer
          format: int64
      responses:
        "201":
          description: Patient Allergies Added Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/PatientDrugAllergy"
        "405":
          description: Invalid input
      security:
        - adt_auth:
          - create_patient
          - read_patient
    put:
      tags:
        - patients
      summary: Update an existing patient Allergies
      description: ""
      operationId: updatePatientAllergies
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/PatientDrugAllergy"
        - in: path
          name: patientId
          description: Patient id to update
          required: true
          type: integer
          format: int64
        - in: path
          name: allergieId
          description: Allergies id to update
          required: true
          type: integer
          format: int64        
      responses:
        "405":
          description: Validation exception
        "404":
          description: Patient or Allergies not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient    
    delete:
      tags:
        - patients
      summary: Remove a patient PatientAllergies
      description: ""
      operationId: deletePatientAllergies
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: patientId
          description: ID's of patient and appointment that needs to be fetched
          required: true
          type: integer
          format: int64
        - in: path
          name: allergieId
          description: ID of appointment that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid patient value
        "204":
          description: Visit has been removed
      security:
        - adt_auth:
          - create_patient
          - read_patient

  /lists/illnesses:
    get:
      tags:
        - lists
      summary: Fetch Chronic Illnesses (for select options)
      description:  Fetch Chronic Illnesses (for select options)
      operationId: ChronicIllnesses
      produces:
        - application/json
      parameters:
        - in: query
          name: tags
          description: Tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/ChronicIllnesses"
        "400":
          description: Invalid tag value
      security:
        - adt_auth:
          - read_illnesses
  /lists/allergies:
    get:
      tags:
        - lists
        - Allergies
      summary: Fetch Drug Allergies  (for select options)
      description:  Fetch Drug Allergies  (for select options)
      operationId: DrugAllergies
      produces:
        - application/json
      parameters:
        - in: query
          name: tags
          description: Tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PatientDrugAllergy"
        "400":
          description: Invalid tag value
      security:
        - adt_auth:
          - read_allergies
  /lists/patientsources:
    get:
      tags:
        - lists
        - Allergies
      summary: Fetch Drug Allergies  (for select options)
      description:  Fetch Drug Allergies  (for select options)
      operationId: PatientSources
      produces:
        - application/json
      parameters:
        - in: query
          name: tags
          description: Tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/PatientSources"
        "400":
          description: Invalid tag value
      security:
        - adt_auth:
          - read_patientsources
  /services:
    get: 
      tags: 
        - services
      summary: fetches a list of services at a facility
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: limit
          in: query
          description: Number of service to fetch
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Service"
        "400":
          description: Invalid status value
      security:
        - adt_auth:
          - read_service
    post:
      tags:
        - patients
      summary: Add a new service to the facility
      description: ""
      operationId: addService
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Service object being added to facility
          required: false
          schema:
            $ref: "#/definitions/Service"
      responses:
        "201":
          description: Service Added Successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Service"
        "405":
          description: Invalid input
      security:
        - adt_auth:
          - create_service
          - read_service
  /services/{serviceId}:
    get:
      tags:
        - services
      summary: Find service by serviceId
      description: Returns the service with the specified serviceId
      operationId: getServiceById
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: serviceId
          description: ID of service that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Patient not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Patient"
        "400":
          description: Invalid ID supplied
      security:
        - api_key: []
        - adt_auth:
          - create_service
          - read_service
    put:
      tags:
        - services
      summary: Update an existing patient
      description: ""
      operationId: updateService
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: body
          description: Patient object that needs to be added to the store
          required: false
          schema:
            $ref: "#/definitions/Patient"
        - in: path
          name: serviceId
          description: Patient id to delete
          required: true
          type: integer
          format: int64     
      responses:
        "202":
          description: Update Accepted
        "405":
          description: Validation exception
        "404":
          description: Patient not found
        "400":
          description: Invalid ID supplied
      security:
        - adt_auth:
          - create_patient
          - read_patient   
    delete:
      tags:
        - services
      summary: Deletes a Service
      description: ""
      operationId: deleteService
      produces:
        - application/json
        - application/xml
      parameters:
        - in: header
          name: api_key
          description: ""
          required: true
          type: string
        - in: path
          name: serviceId
          description: Patient id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid patient value
        "204":
          description: Patient deleted
      security:
        - adt_auth:
          - create_patient
          - read_patient

securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
  adt_auth:
    type: oauth2
    authorizationUrl: http://api.adtcore.io/api/oauth/dialog
    flow: implicit
    scopes:
      create_patient: Create patients
      read_patient: Read your patients
      read_illnesses: Read Chronic Illnesses
      read_allergies: Read Drug Allergies
      read_patientsources: Read Patient Sources
      read_service: raed services
      create_service: create services
      
definitions:
  Appointment: 
    type: object
    properties:
      id: 
        type: integer
        format: init64
      appointment_date: 
        type: string
        example: 2016-10-02
      is_appointment:
        type: integer
        format: init64
      facility_id: 
        type: integer
        format: init64
  Regimen:
    type: object
    properties:
      id:
        type: integer
        format: int64
      code: 
        type: string
      name: 
        type: string
      is_active:
        type: integer
        format: int64
      service_id:
        type: integer
        format: int64
      category_id:
        type: integer
        format: int64
  PatientPartner:
    type: object
    properties:
      partnerId:
        type: integer
        format: init64
      status:
        type: string
        example: Single
  Drug:
    type: object
    properties:
      id: 
        type: integer
        format: init64
      name: 
        type: string
      pack_size:
        type: integer
        format: init64
      duration:
        type: integer
        format: init64
      quantity:
        type: integer
        format: init64
      is_arv:
        type: boolean
      is_tb:
        type: boolean
      is_active:
        type: boolean
      unit_id:
        type: integer
      dose_id:
        type: integer
      generic_id:
        type: integer
      supporter_id:
        type: integer
        
  PatientDrugAllergy:
    type: object
    properties:
      drug_id:
        type: integer
        format: init64
      drugrallergy:
        type: string
      is_active:
        type: boolean
  
  ChronicIllnesses:
    type: object
    properties:
      illness_id:
        type: integer
        format: init64
      illness:
        type: string
      is_active:
        type: boolean
 
  PatientSources:
    type: object
    properties:
      source_id:
        type: integer
        format: init64
      source:
        type: string
      is_active:
        type: boolean
         
  PatientDrugOther:
    type: object
    properties:
      patient_id:
        type: integer
        format: init64
      allergy_name:
        type: string
      
  FamilyPlanning:
    type: object
    properties:
      id: 
        type: integer
        format: init64
      name: 
        type: string
        example: Vasectomy
    
  PatientFamilyPlanning:
    type: object
    properties: 
      patientId:
        type: integer
        format: init64
      family_planning_id:
        $ref : "#/definitions/FamilyPlanning"
  
  Visit:
    type: object
    properties:
      id:
        type: integer
        format: init64
      current_height:
        type: integer
        format: init64
      current_weight:
        type: integer
        format: init64
      visit_date: 
        type: string
        example: 2016-10-0
      appointment_adherence:
        type: integer
        format: init64
      is_active:
        type: integer
        format: init64
      patient_id:
        type: integer
        format: init64
      facility_id:
        type: integer
        format: init64
      user_id: 
        type: integer
        format: init64
      purpose_id: 
        type: integer
        format: init64
      last_regimen_id:
        type: integer
        format: init64
      current_regimen_id:
        type: integer
        format: init64
      change_reason_id:
        type: integer
        format: init64
      non_adherence_reason_id:
        type: integer
        format: init64
      appointment_id:
        type: integer
        format: init64
      regimen: 
        $ref: "#/definitions/Regimen"
  
  Status:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        
  Patient_status:
    type: object
    properties:
      patient_id: 
        type: integer
        format: int64
      status_id:
        type: integer
        format: int64
      change_date:
        type: string
        example: 2016-10-0
      status:
        $ref : "#/definitions/Status"
        
  Patients:
    type: object
    required:
      - first_name
      - id
    properties:
      id:
        type: integer
        format: int64
      ccc_number:
        type: string
        example: ABC123456
      appointment:
        $ref: "#/definitions/Appointment"
      visit: 
        $ref: "#/definitions/Visit"
      first_name:
        type: string
        example: John
      last_name:
        type: string
        example: John
      other_name:
        type: string
        example: John
      phone_number:
        type: integer
        format: int64
      alternate_number:
        type: integer
        format: int64
      physical_address:
        type: string
        example: Nairobi West
      gender:
        type: string
        example: male,female
      birth_date:
        type: string
        format: date-time
      enrollment_date:
        type: string
        format: date-time
      support_group:
        type: string
        example: lorem ipsum
      is_pregnant:
        type: boolean
      is_tb:
        type: boolean
      is_tb_tested:
        type: boolean
      is_smoke:
        type: boolean
      is_alchohol:
        type: boolean
      is_sms:
        type: boolean
      deleted_at:
        type: string
      patient_status:
        $ref: "#/definitions/Patient_status"

  Patient:
    type: object
    properties:
      id:
        type: integer
        format: int64
      ccc_number:
        type: string
        example: ABC123456
      first_name:
        type: string
        example: John
      last_name:
        type: string
        example: John
      other_name:
        type: string
        example: John
      phone_number:
        type: integer
        format: int64
      alternate_number:
        type: integer
        format: int64
      physical_address:
        type: string
        example: Nairobi West
      gender:
        type: string
        example: male,female
      birth_date:
        type: string
        format: date-time
      enrollment_date:
        type: string
        format: date-time
      support_group:
        type: string
        example: lorem ipsum
      is_pregnant:
        type: boolean
      is_tb:
        type: boolean
      is_tb_tested:
        type: boolean
      is_smoke:
        type: boolean
      is_alchohol:
        type: boolean
      is_sms:
        type: boolean
      deleted_at:
        type: string
      patient_status:
        $ref: "#/definitions/Patient_status"
      appointment:
        $ref: "#/definitions/Appointment"
      visit: 
        $ref: "#/definitions/Visit"
      patient_partner:
        $ref: "#/definitions/PatientPartner"
      patient_family_planning:
        $ref: "#/definitions/PatientFamilyPlanning"
      patient_drug_allergy:
        $ref: "#/definitions/PatientDrugAllergy"
      patient_drug_other:
        $ref: "#/definitions/PatientDrugOther"

  Prophylaxis:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        
  PatientProphylaxis:
    type: object
    properties:
      patient_id: 
        type: integer
        format: int64
      prophylaxis_id:
        type: integer
        format: int64
      prophylaxis:
        $ref : "#/definitions/Prophylaxis"
  PatientRegimen:
    type: object
    properties:
      patient_id: 
        type: integer
        format: int64
      regimen_id:
        type: integer
        format: int64
      regimen:
        $ref : "#/definitions/Regimen"
    
  Appointments:
    type: object
    properties:
      patient_id: 
        type: integer
        format: int64
      Appointment_id:
        type: integer
        format: int64
      Appointments:
        $ref : "#/definitions/Appointment"

  Visits:
    type: object
    properties:
      patient_id: 
        type: integer
        format: int64
      Visit_id:
        type: integer
        format: int64
      Visit:
        $ref : "#/definitions/Visits"
      
  PatientDependants:
    type: object
    properties:
      patient_id: 
        type: integer
        format: int64
      Dependant_id:
        type: integer
        format: int64
      Dependants:
        $ref : "#/definitions/Patients"
        
  Service:
    type: object
    properties:
      id:
        type: integer
        format: int64
      service_name:
        type: string
        example: ART