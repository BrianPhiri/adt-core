<?php

/**
 * ADT API
 * Official & Core API for ADT  [ADT](http://adtcore.io)  Main API 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;
use Illuminate\Pagination\Paginator;
use App\Models\DrugModels\Drug;
class DrugsApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation drugsGet
     *
     * fetches a list of services at a facility.
     *
     *
     * @return Http response
     */
    public function drugsget()
    {
        $response = Drug::paginate(10);
        return response()->json($response, 200);
    }
    /**
     * Operation drugsDrugIdGet
     *
     * Find drug by drugId.
     *
     * @param int $drug_id Particular Service at facility specified by the ID (required)
     *
     * @return Http response
     */
    public function drugsByIdget($drug_id)
    {
        $response = Drug::findOrFail($drug_id);
        return response()->json($response, 200);
    }
    /**
     * Operation drugsPost
     *
     * Add a new service to the facility.
     *
     *
     * @return Http response
     */
    public function drugspost()
    {
        $input = Request::all();
        Drug::create($input);
        return response($input);
    }
    /**
     * Operation drugsDrugIdPut
     *
     * Update an existing drug specified by the drugId.
     *
     * @param int $drug_id Particular Service at facility specified by the ID (required)
     *
     * @return Http response
     */
    public function drugsput($drug_id)
    {
        $drug = Drug::findOrFail($drug_id);
        $input = Request::all();
        $drug->name = $input['name'];
        $drug->pack_size = $input['pack_size'];
        $drug->duration = $input['duration'];
        $drug->quantity = $input['quantity'];
        $drug->is_arv = $input['is_arv'];
        $drug->is_tb = $input['is_tb'];
        $drug->unit_id = $input['unit_id'];
        $drug->dose_id = $input['dose_id'];
        $drug->generic_id = $input['generic_id'];
        $drug->supporter_id = $input['supporter_id'];
        if($drug->save()){
            return response()->json(['msg' => 'updated']);
        }else{
            return response('Failed');
        }
    }
    /**
     * Operation drugsDrugIdDelete
     *
     * Deletes the drug specified by drugId.
     *
     * @param int $drug_id Particular Service at facility specified by the ID (required)
     *
     * @return Http response
     */
    public function drugsdelete($drug_id)
    {
        $input = Request::all();
        return response('How about implementing drugsDrugIdDelete as a DELETE method ?');
    }

    /**
     * Operation drugsDrugIdDoseGet
     *
     * Find drug dose for drugId.
     *
     * @param int $drug_id ID of service that needs to be fetched (required)
     *
     * @return Http response
     */
    public function drugsDrugIdDoseGet($drug_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing drugsDrugIdDoseGet as a GET method ?');
    }
    /**
     * Operation drugsDrugIdDosePost
     *
     * Add a dose for a particular drug with drugId.
     *
     * @param int $drug_id ID of service that needs to be fetched (required)
     *
     * @return Http response
     */
    public function drugsDrugIdDosePost($drug_id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing drugsDrugIdDosePost as a POST method ?');
    }
}
